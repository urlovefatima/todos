name: Pull Request
on:
  push:
    branches:
      - 'DIC1-*'
      - 'IS-*'

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      MY_ENV_VAR: value

    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Scan de secrets
        uses: gitleaks/gitleaks-action@v2
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}}
       

      - name: Scan des vuln√©rabilit√©s
        # Cette √©tape analyse les biblioth√®ques Java (pom.xml) pour d√©tecter les vuln√©rabilit√©s (CVEs)
        run: |
          # T√©l√©chargement et extraction (version light)
          echo "‚¨áÔ∏è T√©l√©chargement de Dependency-Check..."
          curl -sSfL https://github.com/jeremylong/DependencyCheck/releases/download/v9.0.9/dependency-check-9.0.9-release.zip -o dc.zip
          unzip -q dc.zip -d ./dependency-check
          chmod +x ./dependency-check/bin/dependency-check.sh
           # Configuration minimale pour PR (scan rapide)
          echo "üîç Ex√©cution du scan..."
          ./dependency-check/bin/dependency-check.sh \
            --project "Scan-PR" \
            --scan "**/{pom.xml,package.json,*.jar,*.war}" \
            --format "JSON" \
            --out "report" \
            --failOnCVSS 8 \ 
            --disableOssIndex true \ 
            --nvdApiDelay 5000 \  # D√©lai entre requ√™tes API
            --nvdApiKey $secrets.NVD_API_KEY

          # G√©n√©ration d'un r√©sum√©
          echo "üìä R√©sum√© des vuln√©rabilit√©s :"
          jq '.dependencies[] | select(.vulnerabilities != null)' report/dependency-check-report.json | jq -r '["CVSS", "CVE", "Package"], ["-----", "---", "-------"], (.vulnerabilities[] | [.cvssv3.baseScore, .name, .fileName]) | @tsv' | column -t -s $'\t'

        continue-on-error: true  # Ne bloque pas le workflow (√† d√©sactiver en prod)

      
      - name: Unit Tests
        run: |
          mvn test -Put -Pit
        shell: bash

      - name: Quality Gate
        run: |
          echo "Todo : Quality Gate"
        shell: bash

      - name: Check Quality Gate
        run: |
          echo "Todo : Check Quality Gate"
        shell: bash

