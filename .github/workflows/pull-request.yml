name: Pull Request
on:
  push:
    branches:
      - 'DIC1-*'
      - 'IS-*'

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      MY_ENV_VAR: value

    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Scan de secrets
        uses: gitleaks/gitleaks-action@v2
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}}


      - name: Scan des vulnérabilités
        run: |
          mkdir -p reports
          sudo chown -R 1000:1000 reports
          docker run --rm \
            -v ${{ github.workspace }}:/src \
            owasp/dependency-check:latest \
            --project "pull-request-scan" \
            --scan /src \
            --format "HTML" --format "JSON" \
            --out /src/reports \
            --nvdApiKey ${{ secrets.NVD_API_KEY }} \
            --failOnCVSS 10 \
            --enableRetired \
            --enableExperimental \
            --exclude "**/target/**" \
            --exclude "**/test/**"

      - name: Upload du rapport
        if: always()  # Toujours exécuter même si l'étape précédente a échoué
        uses: actions/upload-artifact@v4
        with:
          name: rapport-vulnerabilites
          path: reports/
    
      
      - name: Unit Tests
        run: |
          mvn test -Put -Pit
        shell: bash


      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar


      - name: Quality Gate
        uses: SonarSource/sonarqube-scan-action@v5
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=urlovefatima_todos
            -Dsonar.organization=urlovefatima
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check Quality Gate
        run: |
          echo "Todo : Check Quality Gate"
        shell: bash